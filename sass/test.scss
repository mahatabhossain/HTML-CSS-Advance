/* Universal selector(*) selects all element and set their value defined in the block*/
*{
    margin: 0;
    padding: 0;
}

//color variable and value
$color-primary: yellow;
$color-secondary:orange;
$color-tertiary: pink;
$color-text-dark: #333;

$width-button: 150px;

//@mixin (declaration)is just a reusable piece of code we can use it anywhere in CSS script.
@mixin style-text{
    text-decoration: none;
     color: $color-text-dark;
}

//we can pass argument into @mixin
// @mixin style-text($background-color){
//     text-decoration: none;
//      color: $color-text-dark;
//      background-color: $background-color;
// }

//@function (declaration) works in SCSS like it works in any other programming language.
@function divide($a, $b){
    @return $a / $b;
}


// %extend works like a placeholder we can write any css and apply it with their extend name.
%button-main-link-style{
    display: inline-block;
    text-decoration: none;
    text-align: center;
    border-radius: 100px;
    background-color:$color-secondary;
}

nav{
    margin:0;
    background-color: $color-primary;
    height: divide(80,2 )*1px; //@function calling.
    text-align: center;
    padding-top: 15px;

    &::after{
        content: "";
        clear: both;
        display: table;
    }
}

//nesting feature of sass or scss
.navigation{
    list-style: none;
    float: left;

    li{
        padding-left: 20px;
        display: inline-block;
        margin-left: 30px;
        
        //The & is a selector it concatinates parent class
        &:first-child {
            margin: 0;

        }
        a:link{
            // @mixin calling 
           @include style-text;
        }
    }
}

.button{
    float: right;
    padding-right: 20px;
    height: 30px;
    width: 80px;
}

.button-main:link{
    @extend %button-main-link-style;
}
.button-main:hover{
    background-color: darken($color-secondary, 15%);
}